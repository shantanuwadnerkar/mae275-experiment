<!--
################################################################
#                                                              #
#		ROS simmulation for Mobile Robot Olfaction             #
#                           							       #
################################################################
-->

<launch>
    <arg name="scenario" default="10x6_empty_room" />

    ### ROBOT SIMULATION ###
    <param name="use_sim_time" value="true" />

    <node pkg="stage_ros" type="stageros" name="stage_ros" respawn="false" output="screen" args="$(find test_env)/$(arg scenario)/launch/ros/stage.world" >
        <param name="laser_scan_topic" value="/laser_scan"/>
        <param name="laser_frame_id" value="laser_stage" />
        <param name="odom_topic" value="/odom"/>
        <param name="odom_frame_id" value="odom" />    
        <param name="disable_odometry" value="false" />    
    </node>

    ### URDF MODEL ###
    <param name="robot_description" textfile="$(find test_env)/$(arg scenario)/launch/ros/giraff.urdf" />
    <param name="use_gui" value="False"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

    ### NAVIGATION ###
    <node name="map_server" pkg="map_server" type="map_server" args="$(find test_env)/$(arg scenario)/occupancy.yaml" />  
    <include file="$(find test_env)/$(arg scenario)/launch/ros/simbot_move_base.launch" />  
    <node pkg="fake_localization" type="fake_localization" name="fake_localization" output="screen">	    
        <param name="odom_frame_id" value="odom"/>
        <param name="global_frame_id" value="map"/>
        <param name="base_frame_id" value="base_link"/>
    </node>

    ### RVIZ ###
    <node name="rviz_player" pkg="rviz" type="rviz" args="-d $(find test_env)/$(arg scenario)/launch/ros/gaden.rviz"/>
  
  
# ===================== GADEN =====================================

    ### NODE environment (for RVIZ visualization) ###
    <node pkg="gaden_environment" type="environment" name="environment" output="screen">
	    <param name="verbose" value="false"/>
        <param name="wait_preprocessing" value="false"/>    	  ### wait for the ok from gaden_preprocessing before running
        <param name="fixed_frame" value="map"/>
        
	    # Plot CAD models (Collada format .dae)
	    <param name="number_of_CAD" value="3"/>
	    <rosparam subst_value="True">
            CAD_0: package://test_env/$(arg scenario)/cad_models/10x6_walls.dae
            CAD_0_color: [0.92, 0.96, 0.96]
            
            CAD_1: package://test_env/$(arg scenario)/cad_models/10x6_door_left.dae
            CAD_1_color: [0.96, 0.17, 0.3]
            
            CAD_2: package://test_env/$(arg scenario)/cad_models/10x6_door_right.dae
            CAD_2_color: [0.96, 0.17, 0.3]
        </rosparam>
	    
	    # Plot 3D OccupancyGridmap
	    <param name="occupancy3D_data" value="$(find test_env)/$(arg scenario)/OccupancyGrid3D.csv" />
	    
	    # Plot gas sources
        <param name="number_of_sources" value="1"/>
        <rosparam>
            source_0_position_x: 0.5
            source_0_position_y: 3.0
            source_0_position_z: 0.5
            source_0_scale: 0.2
            source_0_color: [0.0, 1.0, 0.0] 
        </rosparam>
    </node>
          

    ### NODE PLAYER ###
    #-------------------
    <node pkg="gaden_player" type="gaden_player" name="gaden_player" output="screen">
        <param name="verbose" value="false" />
	    <param name="player_freq" value="2" />         ###(Hz) Freq for loading the simulation log_files
	    <param name="initial_iteration" value="0" />
	    <param name="num_simulators" value="1" />      ### Number of simulations to load [1-inf] (useful for multiple sources and gases)
    
        # Data from the "filament_simulator" pkg. Multiple sources can be set here
        <param name="simulation_data_0" value="$(find test_env)/$(arg scenario)/gas_simulations/FilamentSimulation_gasType_0_sourcePosition_0.50_3.00_0.50_iteration_" />
        
        # Loop options        
        <param name="allow_looping" value="true" />
        <param name="loop_from_iteration" value="0" />
        <param name="loop_to_iteration" value="298" />
        
    </node>
  
  
  ### SENSOR SIMULATION ###
  #-----------------------#
  # SENSOR MODELS: 
  # MOX: TGS2620=0, TGS2600=1, TGS2611=2
  # PID: MiniRaeLite=30
  # Sensors are simulated onboad the robot
  
  <group ns="PID">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_pid" output="screen">
        <param name="sensor_model" value="30" />
        <param name="sensor_frame" value="pid_frame" />
        <param name="fixed_frame" value="map"/>
        <param name="noise_std" value="20.1"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="pid_broadcaster" args="0.0 0.0 0.5 0 0 0 base_link pid_frame 100" />  
  
  <group ns="MOX">
    <node pkg="simulated_gas_sensor" type="simulated_gas_sensor" name="fake_mox" output="screen">
        <param name="sensor_model" value="2" />
        <param name="sensor_frame" value="mox_frame" />
        <param name="fixed_frame" value="map"/>
        <param name="noise_std" value="0.1"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="mox_broadcaster" args="0.0 0.0 0.5 0 0 0 base_link mox_frame 100" />

  <group ns="Anemometer">
    <node pkg="simulated_anemometer" type="simulated_anemometer" name="fake_anemometer" output="screen">	        
      <param name="sensor_frame" value="anemometer_frame" />
      <param name="fixed_frame" value="map"/>
      <param name="noise_std" value="0.1"/>
      <param name="use_map_ref_system" value="false"/>
    </node>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="anemometer_broadcaster" args="0.0 0.0 0.5 0 0 0 base_link anemometer_frame 100" />


  ### RQT PLOT Sensors ###
  #----------------------#
  <node pkg="rqt_plot" type="rqt_plot" name="PID_plot" args="/PID/Sensor_reading/raw /MOX/Sensor_reading/raw"/>
  <node pkg="rqt_plot" type="rqt_plot" name="WIND_plot" args="/Anemometer/WindSensor_reading "/>
  
   
  
  
</launch>
